// DO NOT EDIT. This file is generated by Fresh.
// This file SHOULD be checked into source version control.
// This file is automatically updated during development when running `dev.ts`.

import * as $_slug_index from "./routes/[slug]/index.tsx";
import * as $_slug_photos_photo_id_ from "./routes/[slug]/photos/[photo_id].tsx";
import * as $_slug_photos_index from "./routes/[slug]/photos/index.tsx";
import * as $_404 from "./routes/_404.tsx";
import * as $_app from "./routes/_app.tsx";
import * as $_layout from "./routes/_layout.tsx";
import * as $_middleware from "./routes/_middleware.ts";
import * as $admin_middleware from "./routes/admin/_middleware.ts";
import * as $admin_delete_db from "./routes/admin/delete-db.tsx";
import * as $admin_edit_db from "./routes/admin/edit-db.tsx";
import * as $admin_index from "./routes/admin/index.tsx";
import * as $admin_logs_id_ from "./routes/admin/logs/[id].tsx";
import * as $admin_logs_index from "./routes/admin/logs/index.tsx";
import * as $admin_places_id_draft_evaluate from "./routes/admin/places/[id]/draft/evaluate.tsx";
import * as $admin_places_id_draft_revs_rev_id_ from "./routes/admin/places/[id]/draft/revs/[rev_id].tsx";
import * as $admin_places_index from "./routes/admin/places/index.tsx";
import * as $admin_users_id_access from "./routes/admin/users/[id]/access.tsx";
import * as $admin_users_id_index from "./routes/admin/users/[id]/index.tsx";
import * as $admin_users_index from "./routes/admin/users/index.tsx";
import * as $api_places from "./routes/api/places.ts";
import * as $index from "./routes/index.tsx";
import * as $oauth_callback from "./routes/oauth/callback.ts";
import * as $oauth_signin from "./routes/oauth/signin.ts";
import * as $oauth_signout from "./routes/oauth/signout.ts";
import * as $places_id_declined_edit from "./routes/places/[id]/declined/edit.tsx";
import * as $places_id_declined_index from "./routes/places/[id]/declined/index.tsx";
import * as $places_id_draft_edit from "./routes/places/[id]/draft/edit.tsx";
import * as $places_id_draft_index from "./routes/places/[id]/draft/index.tsx";
import * as $places_id_edit from "./routes/places/[id]/edit.tsx";
import * as $places_id_index from "./routes/places/[id]/index.tsx";
import * as $places_id_revs_rev_id_index from "./routes/places/[id]/revs/[rev_id]/index.tsx";
import * as $places_id_revs_rev_id_rev_diff_partial from "./routes/places/[id]/revs/[rev_id]/rev-diff-partial.tsx";
import * as $places_check_slug_unique from "./routes/places/check-slug-unique.ts";
import * as $places_find_address from "./routes/places/find-address.ts";
import * as $places_index from "./routes/places/index.tsx";
import * as $places_new from "./routes/places/new.tsx";
import * as $places_upload_session from "./routes/places/upload-session.ts";
import * as $profile_middleware from "./routes/profile/_middleware.ts";
import * as $profile_alerts_index from "./routes/profile/alerts/index.tsx";
import * as $profile_alerts_unseen_count from "./routes/profile/alerts/unseen-count.tsx";
import * as $profile_edit from "./routes/profile/edit.tsx";
import * as $profile_index from "./routes/profile/index.tsx";
import * as $robots_txt from "./routes/robots.txt.tsx";
import * as $rss_xml from "./routes/rss.xml.tsx";
import * as $sitemap_xml from "./routes/sitemap.xml.tsx";
import * as $users_id_ from "./routes/users/[id].tsx";
import * as $Gallery from "./islands/Gallery.tsx";
import * as $ImageWithLoader from "./islands/ImageWithLoader.tsx";
import * as $Lightbox from "./islands/Lightbox.tsx";
import * as $MapView from "./islands/MapView.tsx";
import * as $ModalOverlay from "./islands/ModalOverlay.tsx";
import * as $ProfileDropdown from "./islands/ProfileDropdown.tsx";
import * as $places_islands_FormAddress from "./routes/places/(_islands)/FormAddress.tsx";
import * as $places_islands_FormGallery from "./routes/places/(_islands)/FormGallery.tsx";
import * as $places_islands_PlaceForm from "./routes/places/(_islands)/PlaceForm.tsx";
import * as $places_islands_PlacesTable from "./routes/places/(_islands)/PlacesTable.tsx";
import { type Manifest } from "$fresh/server.ts";

const manifest = {
  routes: {
    "./routes/[slug]/index.tsx": $_slug_index,
    "./routes/[slug]/photos/[photo_id].tsx": $_slug_photos_photo_id_,
    "./routes/[slug]/photos/index.tsx": $_slug_photos_index,
    "./routes/_404.tsx": $_404,
    "./routes/_app.tsx": $_app,
    "./routes/_layout.tsx": $_layout,
    "./routes/_middleware.ts": $_middleware,
    "./routes/admin/_middleware.ts": $admin_middleware,
    "./routes/admin/delete-db.tsx": $admin_delete_db,
    "./routes/admin/edit-db.tsx": $admin_edit_db,
    "./routes/admin/index.tsx": $admin_index,
    "./routes/admin/logs/[id].tsx": $admin_logs_id_,
    "./routes/admin/logs/index.tsx": $admin_logs_index,
    "./routes/admin/places/[id]/draft/evaluate.tsx":
      $admin_places_id_draft_evaluate,
    "./routes/admin/places/[id]/draft/revs/[rev_id].tsx":
      $admin_places_id_draft_revs_rev_id_,
    "./routes/admin/places/index.tsx": $admin_places_index,
    "./routes/admin/users/[id]/access.tsx": $admin_users_id_access,
    "./routes/admin/users/[id]/index.tsx": $admin_users_id_index,
    "./routes/admin/users/index.tsx": $admin_users_index,
    "./routes/api/places.ts": $api_places,
    "./routes/index.tsx": $index,
    "./routes/oauth/callback.ts": $oauth_callback,
    "./routes/oauth/signin.ts": $oauth_signin,
    "./routes/oauth/signout.ts": $oauth_signout,
    "./routes/places/[id]/declined/edit.tsx": $places_id_declined_edit,
    "./routes/places/[id]/declined/index.tsx": $places_id_declined_index,
    "./routes/places/[id]/draft/edit.tsx": $places_id_draft_edit,
    "./routes/places/[id]/draft/index.tsx": $places_id_draft_index,
    "./routes/places/[id]/edit.tsx": $places_id_edit,
    "./routes/places/[id]/index.tsx": $places_id_index,
    "./routes/places/[id]/revs/[rev_id]/index.tsx":
      $places_id_revs_rev_id_index,
    "./routes/places/[id]/revs/[rev_id]/rev-diff-partial.tsx":
      $places_id_revs_rev_id_rev_diff_partial,
    "./routes/places/check-slug-unique.ts": $places_check_slug_unique,
    "./routes/places/find-address.ts": $places_find_address,
    "./routes/places/index.tsx": $places_index,
    "./routes/places/new.tsx": $places_new,
    "./routes/places/upload-session.ts": $places_upload_session,
    "./routes/profile/_middleware.ts": $profile_middleware,
    "./routes/profile/alerts/index.tsx": $profile_alerts_index,
    "./routes/profile/alerts/unseen-count.tsx": $profile_alerts_unseen_count,
    "./routes/profile/edit.tsx": $profile_edit,
    "./routes/profile/index.tsx": $profile_index,
    "./routes/robots.txt.tsx": $robots_txt,
    "./routes/rss.xml.tsx": $rss_xml,
    "./routes/sitemap.xml.tsx": $sitemap_xml,
    "./routes/users/[id].tsx": $users_id_,
  },
  islands: {
    "./islands/Gallery.tsx": $Gallery,
    "./islands/ImageWithLoader.tsx": $ImageWithLoader,
    "./islands/Lightbox.tsx": $Lightbox,
    "./islands/MapView.tsx": $MapView,
    "./islands/ModalOverlay.tsx": $ModalOverlay,
    "./islands/ProfileDropdown.tsx": $ProfileDropdown,
    "./routes/places/(_islands)/FormAddress.tsx": $places_islands_FormAddress,
    "./routes/places/(_islands)/FormGallery.tsx": $places_islands_FormGallery,
    "./routes/places/(_islands)/PlaceForm.tsx": $places_islands_PlaceForm,
    "./routes/places/(_islands)/PlacesTable.tsx": $places_islands_PlacesTable,
  },
  baseUrl: import.meta.url,
} satisfies Manifest;

export default manifest;
